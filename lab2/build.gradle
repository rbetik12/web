plugins {
	id 'war'
	id 'org.springframework.boot' version '3.0.7'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
}

group = 'com.rbetik12'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

sourceSets {
	main {
		kotlin {
			srcDir "src/main/kotlin"
			srcDir "build/generated-sources/jaxb"
		}
		java {
			srcDir "build/generated-sources/jaxb"
			srcDir "src/main/java"
		}
	}
}

task genJaxb {
	ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
	ext.schema = "src/main/resources/products.xsd"

	outputs.dir sourcesDir

	doLast() {
		project.ant {
			taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
					classpath: configurations.jaxb.asPath
			mkdir(dir: sourcesDir)

			xjc(destdir: sourcesDir, schema: schema) {
				arg(value: "-wsdl")
				produces(dir: sourcesDir, includes: "**/*.java")
				produces(dir: sourcesDir, includes: "**/*.kt")
			}
		}
	}
}

compileKotlin.dependsOn genJaxb

configurations {
	jaxb
}

bootJar {
	archiveBaseName = 'lab1'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.ws:spring-ws-core'
	implementation 'wsdl4j:wsdl4j'
	implementation 'commons-io:commons-io:2.7'
	jaxb("org.glassfish.jaxb:jaxb-xjc")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}
